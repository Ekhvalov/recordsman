<?php
namespace RecordsMan;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-05-24 at 20:33:20.
 */
class BoolConditionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var BoolCondition
     */
    protected $andCondition;
    protected $orCondition;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->andCondition = BoolCondition::create(['a > 5', 'b <= 10']);
        $this->orCondition = BoolCondition::create(['a > 5', 'b <= 10'], Condition::OPERATOR_OR);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers RecordsMan\BoolCondition::compile
     * @todo   Implement testCompile().
     */
    public function testCompile()
    {
        $this->assertEquals($this->andCondition->compile(), '((`a`>5) AND (`b`<=10))');
        $this->assertEquals($this->orCondition->compile(), '((`a`>5) OR (`b`<=10))');
    }

    /**
     * @covers RecordsMan\BoolCondition::test
     * @todo   Implement testTest().
     */
    public function testTest()
    {
        $this->assertTrue($this->andCondition->test(['a' => 10, 'b' => 5]));
        $this->assertFalse($this->andCondition->test(['a' => 5, 'b' => 10]));
        $this->assertTrue($this->orCondition->test(['a' => 0, 'b' => 10]));
        $this->assertTrue($this->orCondition->test(['a' => 6, 'b' => 10]));
        $this->assertFalse($this->orCondition->test(['a' => 0, 'b' => 11]));
    }
}
